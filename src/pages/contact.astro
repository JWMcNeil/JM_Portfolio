---
import type { isTransitionBeforePreparationEvent } from "astro:transitions/client";
import BaseLayout from "../layouts/BaseLayout.astro";

import Button from '../components/ui/Button.astro';
---


<BaseLayout>
    <div class="max-w-4xl flex flex-col justify-center items-center space-y-4">
        <h1 class="font-black text-tan text-4xl">Get in touch!</h1>
        <p class="text-smoke-white/80 max-w-2xl">Hey, thanks for checking out my blog, its cool you stopped by! If you want to work together, share some ideas or whatever you're reason for being is, drop me a line below.</p>
        <div class="py-5">
            <form
            action="https://api.web3forms.com/submit"
            method="POST"
            id="form"
            class="needs-validation"
            data-astro-reload
            novalidate>
    
            <!-- Add your Web3Forms Access Key -->
            <input type="hidden" name="access_key" value="YOUR_ACCESS_KEY_HERE" />
    
            <input type="checkbox" class="hidden" style="display:none" name="botcheck" />
            <div class="mb-5">
            <input
                type="text"
                placeholder="Name"
                required
                class="w-full px-4 py-3 border text-white bg-slate-900 placeholder:text-smoke-white/50 rounded-md outline-none focus:ring-1 border-slate-500 focus:border-slate-600 ring-maya-blue"
                name="name"
            />
            <div class="empty-feedback invalid-feedback text-red-400 text-sm mt-1">
                Please provide your name.
            </div>
            </div>
            <div class="mb-5">
            <label for="email_address" class="sr-only">Email Address</label><input
                id="email_address"
                type="email"
                placeholder="Email Address"
                name="email"
                required
                class="w-full px-4 py-3 border bg-slate-900 text-white placeholder:text-smoke-white/50 rounded-md outline-none focus:ring-1 border-slate-500 focus:border-slate-600 ring-maya-blue"
            />
            <div class="empty-feedback text-red-400 text-sm mt-1">
                Please provide your email address.
            </div>
            <div class="invalid-feedback text-red-400 text-sm mt-1">
                Please provide a valid email address.
            </div>
            </div>
            <div class="mb-3">
            <textarea
                name="message"
                required
                placeholder="Your Message"
                class="w-full px-4 py-3 border bg-slate-900 text-white placeholder:text-smoke-white/50 rounded-md outline-none h-36 focus:ring-1 border-slate-500 focus:border-slate-600 ring-maya-blue"
            ></textarea>
            <div class="empty-feedback invalid-feedback text-red-400 text-sm mt-1">
                Please enter your message.
            </div>
            </div>
            <Button type="submit" size="lg" block></Button>
            <div id="result" class="mt-3 text-center"></div>
            </form>
        </div>

            </div>
</BaseLayout>





<style>
  .invalid-feedback,
  .empty-feedback {
    display: none;
  }

  .was-validated :placeholder-shown:invalid ~ .empty-feedback {
    display: block;
  }

  .was-validated :not(:placeholder-shown):invalid ~ .invalid-feedback {
    display: block;
  }

  .is-invalid,
  .was-validated :invalid {
    border-color: #dc3545;
  }
</style>

<script is:inline>
  // astro:page-load to support view Transitions.
  // use DOMContentLoaded event if you are not using View Transitions

  document.addEventListener(
    "astro:page-load",
    () => {
      const form = document.getElementById("form");
      const result = document.getElementById("result");

      form.addEventListener("submit", function (e) {
        e.preventDefault();
        form.classList.add("was-validated");
        if (!form.checkValidity()) {
          form.querySelectorAll(":invalid")[0].focus();
          return;
        }
        const formData = new FormData(form);
        const object = Object.fromEntries(formData);
        const json = JSON.stringify(object);

        result.innerHTML = "Sending...";

        fetch("https://api.web3forms.com/submit", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
            Accept: "application/json",
          },
          body: json,
        })
          .then(async (response) => {
            let json = await response.json();
            if (response.status == 200) {
              result.classList.add("text-green-500");
              result.innerHTML = json.message;
            } else {
              console.log(response);
              result.classList.add("text-red-500");
              result.innerHTML = json.message;
            }
          })
          .catch((error) => {
            console.log(error);
            result.innerHTML = "Something went wrong!";
          })
          .then(function () {
            form.reset();
            form.classList.remove("was-validated");
            setTimeout(() => {
              result.style.display = "none";
            }, 5000);
          });
      });
    },
    { once: true },
  );
</script>